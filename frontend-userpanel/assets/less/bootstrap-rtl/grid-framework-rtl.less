// RTL Framework grid generation
//
// Used only by Bootstrap to generate the correct number of grid classes given
// any value of `@grid-columns`.
.calc-rtl-grid-column(@index, @class, @type) when (@type = push) and (@index > 0) {
  .col-@{class}-push-@{index} {
    right: -1 * percentage((@index / @grid-columns));
    left: 0;
  }
}
.calc-rtl-grid-column(@index, @class, @type) when (@type = push) and (@index = @grid-columns) {
  .col-@{class}-push-0 {
    right: 0;
    left: 0;
  }
}
.calc-rtl-grid-column(@index, @class, @type) when (@type = pull) and (@index > 0) {
  .col-@{class}-pull-@{index} {
    left: -1 * percentage((@index / @grid-columns));
    right: auto;
  }
}
.calc-rtl-grid-column(@index, @class, @type) when (@type = pull) and (@index = @grid-columns) {
  .col-@{class}-pull-0 {
    left: 0;
    right: auto;
  }
}

// Basic looping in LESS
.loop-rtl-grid-columns(@index, @class, @type) when (@index >= 0) {
  .calc-rtl-grid-column(@index, @class, @type);
  // next iteration
  .loop-rtl-grid-columns((@index - 1), @class, @type);
}

// Create grid for specific class
.make-rtl-grid(@class) {
  .loop-rtl-grid-columns(@grid-columns, @class, pull);
  .loop-rtl-grid-columns(@grid-columns, @class, push);
}
